---
title: "Top Movies"
author: "Guillermo Hoyo Bravo"
date: "2 - 5 - 2022"
output:
  prettydoc::html_pretty:
    theme: cayman
    highlight: github
  html_notebook: default
---
```{r global_options, include=FALSE}
rm(list=ls()) 
library(knitr)
opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
```
# Inicialización

El siguiente código ha sido probado con `r R.version.string` y RStudio 1.2.240

Primeramente, es necesario cargar todas las bibliotecas que se van a emplear durante el proyecto.

```{r results="hide"}
library(tidyverse)
library(cowplot)
library(hexbin)
library(lubridate)
library(scales)
library(dplyr)
library(stringr)
library(ggplot2)
require(gtable)


#theme_set(theme_cowplot(font_size=12)) # reduce default font size
```

# Carga y limpieza de datos

El conjunto de datos que vamos a utilizar contiene los viajes realizados el día 14 de enero de 2013, y se puede descargar desde:

https://github.com/peetck/IMDB-Top1000-Movies/blob/master/IMDB-Movie-Data.csv

https://www.kaggle.com/datasets/PromptCloudHQ/imdb-data


```{r}
df <- read_csv("IMDB-Movie-Data.csv")
```

El _dataset_ tiene los siguientes campos:
```{r}
colnames(df)
```

*  **Rank**: Movie rank order
*  **Title**: The title of the film
*  **Genre**: A comma-separated list of genres used to classify the film
*  **Description**: Brief one-sentence movie summary
*  **Director**: The name of the film's director
*  **Actors**: A comma-separated list of the main stars of the film
*  **Year**: The year that the film released as an integer.
*  **Runtime(m)**: The duration of the film in minutes.
*  **Rating**: User rating for the movie 0-10
*  **Votes**: Number of votes
*  **Revenue**: Movie revenue in millions
*  **Metascore**: An aggregated average of critic scores. Values are between 0 and 100. Higher scores represent positive reviews.

# Limpiar registros con datos incorrectos

Comprobamos los Datos.

```{r}
summary(df)
```

La pregunta a la que queremos responder es que genero es el mas gustado o el mas visto. Para ello vamos a sumar el numero de veces que aparecen los distintos generos en el dataset en el top 1000 peliculas de 2006 a 2019.

Para ello, tenemos que transformar el campo de Genre, del tipo character a un array donde se separan los diferentes generos que contiene una misma película. En este caso simplemento realizaremos una tabla contando cuantos generos hay individualmente.


```{r}
# Individualizamos los Generos
pei <- data.frame(table(str_split(df$Genre, ",", simplify = TRUE)))
#pei

# Limpiamos espacios en blanco
pei <- pei[-c(1), ] 
pei
```
```{r}
# Ordenamos y Ploteamos Gráfico de Barras

pei %>%
  mutate(Var1 = fct_reorder(Var1, Freq)) %>%
  ggplot( aes(x=Var1, y=Freq)) +
    geom_bar(stat="identity", fill="#812F24", alpha=.6, width=.4) +
    coord_flip() +
    xlab("") +
    theme_bw()
    #theme_set(theme_bw())
```

Gracias al gráfico, Llegamos a la conclusión de que los generos mas generados son:

    1 - Drama
    
    2 - Action
  
    3 - Comedy

Y los menos generados:

    1 - Música
  
    2 - Western
  
    3 - War
  
```{r}
# Vamos a separarlo por años
dosmilseis <- df[ which(df$Year=='2006'),]
dosmilseis

dosmildiezyseis <- df[ which(df$Year=='2016'),]
dosmildiezyseis
```
  
  
```{r}
# Generamos los datos individuales de los generos producidos 
pei2 <- data.frame(table(str_split(dosmilseis$Genre, ",", simplify = TRUE)))
pei3 <- data.frame(table(str_split(dosmildiezyseis$Genre, ",", simplify = TRUE)))
pei2
pei3

pei3

# Limpiamos espacios en blanco y columnas únicas
pei2 <- pei2[-c(1), ] 
pei2
pei3 <- pei3[-c(1), ] 
pei3 <- pei3[-c(19), ]
pei3

# Añadimos columna identificativa
pei2 <- cbind(pei2, Id=c('2006'))
pei2
pei3 <- cbind(pei3, Id=c('2016'))
pei3

```
  

```{r}

fusion <- rbind(pei2, pei3)
fusion

# Representamos la gráfica
fusion %>%
  mutate(Var1 = fct_reorder(Var1, Freq)) %>%
  ggplot(aes(x=Freq, y=Var1, fill=Id)) +
  geom_bar(stat="identity", position="dodge") +
  theme(axis.text.x = element_text(angle = 90)) +
  ggtitle("Peliculas creadas en 2006 y 2016") +
  labs(y = "Generos de Películas", x = "Nº de películas") +
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
  panel.background = element_blank(), axis.line = element_line(colour = "black"))

```